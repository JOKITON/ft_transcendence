services:
  frontend:
    container_name: frontend
    build: src/frontend/
    volumes:
      - node_modules:/frontend/node_modules
      - frontend:/frontend
    restart: always
    networks:
      - frontend
  redis:
    container_name: redis
    build: src/backend/redis/
    restart: always
    volumes:
      - redis:/data
    networks:
      - backend
    ports:
      - 6379
  # Backend
  db:
    container_name: db
    build: src/database/
    env_file: src/backend/.env.dev
    ports:
      - 5432
    volumes:
      - db:/var/lib/postgresql/data
    restart: always
    shm_size: 128mb
    networks:
      - backend

  auth:
    container_name: auth
    build: src/backend/auth/
    env_file: src/backend/.env.dev
    restart: always
    volumes:
      - dependencies:/opt/venv/
      - migration_semaphore:/migration
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/api/v1/auth/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - db

  pong:
    container_name: pong
    build: src/backend/pong
    env_file: src/backend/.env.dev
    restart: always
    volumes:
      - dependencies:/opt/venv/
      - migration_semaphore:/migration
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/api/v1/pong/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - db
      - auth

  friendship:
    container_name: friendship
    build: src/backend/friendship/
    env_file: src/backend/.env.dev
    restart: always
    volumes:
      - dependencies:/opt/venv/
      - migration_semaphore:/migration
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/api/v1/friendship/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - db
      - auth
      - pong

  livechat:
    container_name: livechat
    build: src/backend/livechat/
    env_file: src/backend/.env.dev
    restart: always
    volumes:
      - migration_semaphore:/migration
    networks:
      - backend
    depends_on:
      - auth
  proxy:
    container_name: proxy
    build: src/proxy/
    ports:
      - 7102:7102
    restart: always
    networks:
      - frontend
      - backend
    depends_on:
      - auth
      - pong
      - friendship
      - livechat

networks:
  frontend:
    name: frontend
    driver: bridge
  backend:
    name: backend
    driver: bridge

volumes:
  # FrontEnd
  frontend:
  node_modules:
  # Backend
  redis:
  db:
  dependencies:
  migration_semaphore:
