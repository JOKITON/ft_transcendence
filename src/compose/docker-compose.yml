name: ft_transcendence

services:
  reverse-proxy:
    container_name: proxy
    build: ../reverse-proxy/
    ports:
      - 8080:8080
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: always
    networks:
      - ft_transcendence

  database:
    container_name: db
    build: ../database/
    env_file: ../database/.env-postgres
    ports:
      - 5432
    # volumes:
      # - db-data:/var/lib/postgresql/data
    restart: always
    shm_size: 128mb
    networks:
      - ft_transcendence
  frontend:
    container_name: frontend
    image: frontend:0.0.1
    build: ../frontend/
    networks:
      - ft_transcendence
    volumes:
      - frontend:/frontend
    restart: always
    depends_on:
      - reverse-proxy
      - database

  authentication:
    container_name: autentication
    build: ../backend/authentication/
    env_file: ../.env.dev
    restart: always
    volumes:
      - authentication:/authentication
    networks:
      - ft_transcendence
    depends_on:
      - reverse-proxy
      - database
#secrets:
#  auth_traefik:

networks:
  ft_transcendence:
    name: ft_transcendence
    driver: bridge

volumes:
  frontend:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../frontend/frontend
  db-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../database/db
  authentication:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../backend/authentication/authentication/
